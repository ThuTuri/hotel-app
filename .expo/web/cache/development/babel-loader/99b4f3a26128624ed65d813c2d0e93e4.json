{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { useContext } from 'react';\nimport { Colors } from \"./src/constants/styles\";\nimport ShowRoomScreen from \"./src/screens/all-top-hotel/ShowRoomScreen\";\nimport DetailsScreen from \"./src/screens/details/DetailsScreen\";\nimport MapViewScreen from \"./src/screens/details/map/MapView\";\nimport LoginScreen from \"./src/screens/login/LoginScreen\";\nimport SignupScreen from \"./src/screens/signup/SignupScreen\";\nimport WelcomeScreen from \"./src/screens/welcome/WelcomeScreen\";\nimport BottomTab from \"./src/shared/bottom-tabs/BottomTab\";\nimport AuthContextProvider, { AuthContext } from \"./src/store/auth-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar StackLoggedIn = createNativeStackNavigator();\nvar StackNotLoggedIn = createNativeStackNavigator();\n\nfunction AuthStack() {\n  return _jsxs(StackNotLoggedIn.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.primary500\n      },\n      headerTintColor: 'white',\n      contentStyle: {\n        backgroundColor: Colors.primary100\n      }\n    },\n    children: [_jsx(StackNotLoggedIn.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Welcome\",\n      component: WelcomeScreen\n    }), _jsx(StackNotLoggedIn.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Home\",\n      component: BottomTab\n    }), _jsx(StackNotLoggedIn.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"DetailsScreen\",\n      component: DetailsScreen\n    }), _jsx(StackNotLoggedIn.Screen, {\n      name: \"Top Hotels\",\n      component: ShowRoomScreen\n    }), _jsx(StackNotLoggedIn.Screen, {\n      name: \"Map\",\n      component: MapViewScreen\n    }), _jsx(StackNotLoggedIn.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(StackNotLoggedIn.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\n\nfunction AuthenticatedStack() {\n  return _jsxs(StackLoggedIn.Navigator, {\n    screenOptions: {\n      headerShown: true\n    },\n    children: [_jsx(StackLoggedIn.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Home\",\n      component: BottomTab\n    }), _jsx(StackLoggedIn.Screen, {\n      name: \"Top Hotels\",\n      component: ShowRoomScreen\n    }), _jsx(StackLoggedIn.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"DetailsScreen\",\n      component: DetailsScreen\n    })]\n  });\n}\n\nfunction Navigation() {\n  var authCtx = useContext(AuthContext);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      options: {\n        headerShown: false\n      },\n      initialRouteName: authCtx.isAuthenticated ? \"LoggedIn\" : \"NotLoggedIn\",\n      children: [_jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"LoggedIn\",\n        component: AuthenticatedStack\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"NotLoggedIn\",\n        component: AuthStack\n      })]\n    })\n  });\n}\n\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(AuthContextProvider, {\n      children: _jsx(Navigation, {})\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/Dell/Documents/DoAn/hotel-app/App.js"],"names":["NavigationContainer","createNativeStackNavigator","StatusBar","useContext","Colors","ShowRoomScreen","DetailsScreen","MapViewScreen","LoginScreen","SignupScreen","WelcomeScreen","BottomTab","AuthContextProvider","AuthContext","Stack","StackLoggedIn","StackNotLoggedIn","AuthStack","headerStyle","backgroundColor","primary500","headerTintColor","contentStyle","primary100","headerShown","AuthenticatedStack","Navigation","authCtx","isAuthenticated","App"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { useContext } from 'react';\nimport { Colors } from './src/constants/styles';\nimport ShowRoomScreen from './src/screens/all-top-hotel/ShowRoomScreen';\nimport DetailsScreen from './src/screens/details/DetailsScreen';\nimport MapViewScreen from './src/screens/details/map/MapView';\nimport LoginScreen from './src/screens/login/LoginScreen';\nimport SignupScreen from './src/screens/signup/SignupScreen';\nimport WelcomeScreen from './src/screens/welcome/WelcomeScreen';\nimport BottomTab from './src/shared/bottom-tabs/BottomTab';\nimport AuthContextProvider, { AuthContext } from './src/store/auth-context';\n\n\nconst Stack = createNativeStackNavigator();\nconst StackLoggedIn = createNativeStackNavigator();\nconst StackNotLoggedIn = createNativeStackNavigator();\n\nfunction AuthStack() {\n  return (\n    <StackNotLoggedIn.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary500 },\n        headerTintColor: 'white',\n        contentStyle: { backgroundColor: Colors.primary100 },\n      }}\n    >\n      <StackNotLoggedIn.Screen options={{ headerShown: false }} name='Welcome' component={WelcomeScreen} />\n      <StackNotLoggedIn.Screen options={{ headerShown: false }} name='Home' component={BottomTab} />\n      <StackNotLoggedIn.Screen options={{ headerShown: false }} name='DetailsScreen' component={DetailsScreen} />\n      <StackNotLoggedIn.Screen name='Top Hotels' component={ShowRoomScreen} />\n      <StackNotLoggedIn.Screen  name='Map' component={MapViewScreen} />\n      <StackNotLoggedIn.Screen name=\"Login\" component={LoginScreen} />\n      <StackNotLoggedIn.Screen name=\"Signup\" component={SignupScreen} />\n\n    </StackNotLoggedIn.Navigator>\n  );\n}\n\nfunction AuthenticatedStack() {\n  return (\n    <StackLoggedIn.Navigator screenOptions={{ headerShown: true }}>\n      <StackLoggedIn.Screen options={{ headerShown: false }} name='Home' component={BottomTab} />\n      <StackLoggedIn.Screen name='Top Hotels' component={ShowRoomScreen} />\n      <StackLoggedIn.Screen options={{ headerShown: false }} name='DetailsScreen' component={DetailsScreen} />\n    </StackLoggedIn.Navigator>\n  );\n}\n\nfunction Navigation() {\n  const authCtx = useContext(AuthContext)\n  return (\n    <NavigationContainer>\n      <Stack.Navigator options={{ headerShown: false }} initialRouteName={authCtx.isAuthenticated ? \"LoggedIn\" : \"NotLoggedIn\"}>\n        <Stack.Screen options={{ headerShown: false }} name='LoggedIn' component={AuthenticatedStack} />\n        <Stack.Screen options={{ headerShown: false }} name='NotLoggedIn' component={AuthStack} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <AuthContextProvider>\n        <Navigation />\n      </AuthContextProvider>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}