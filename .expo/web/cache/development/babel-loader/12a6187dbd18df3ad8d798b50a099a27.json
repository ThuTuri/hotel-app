{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar API_KEY = 'AIzaSyAR-mRDTypxLaERg6v2Hkin3ij70Ci8R9M';\n\nfunction authenticate(mode, email, password) {\n  var url, response, token;\n  return _regeneratorRuntime.async(function authenticate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://identitytoolkit.googleapis.com/v1/accounts:\" + mode + \"?key=\" + API_KEY;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url, {\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }));\n\n        case 3:\n          response = _context.sent;\n          token = response.data.id;\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function createUser(email, password) {\n  return _regeneratorRuntime.async(function createUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(authenticate('signUp', email, password));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function login(email, password) {\n  return _regeneratorRuntime.async(function login$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(authenticate('signInWithPassword', email, password));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/Dell/Downloads/react-native-practical-guide-code-11-auth/react-native-practical-guide-code-11-auth/code/01-starting-code/util/auth.js"],"names":["axios","API_KEY","authenticate","mode","email","password","url","post","returnSecureToken","response","token","data","id","createUser","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,yCAAhB;;AAEA,SAAeC,YAAf,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,GADV,2DACsEH,IADtE,aACkFF,OADlF;AAAA;AAAA,2CAG2BD,KAAK,CAACO,IAAN,CAAWD,GAAX,EAAgB;AACnCF,YAAAA,KAAK,EAAEA,KAD4B;AAEnCC,YAAAA,QAAQ,EAAEA,QAFyB;AAGnCG,YAAAA,iBAAiB,EAAE;AAHgB,WAAhB,CAH3B;;AAAA;AAGUC,UAAAA,QAHV;AASUC,UAAAA,KATV,GASkBD,QAAQ,CAACE,IAAT,CAAcC,EAThC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,OAAO,SAAeC,UAAf,CAA0BT,KAA1B,EAAiCC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACGH,YAAY,CAAC,QAAD,EAAWE,KAAX,EAAkBC,QAAlB,CADf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAeS,KAAf,CAAqBV,KAArB,EAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACGH,YAAY,CAAC,oBAAD,EAAuBE,KAAvB,EAA8BC,QAA9B,CADf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = 'AIzaSyAR-mRDTypxLaERg6v2Hkin3ij70Ci8R9M'\r\n\r\nasync function authenticate(mode, email, password) {\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:${mode}?key=${API_KEY}`;\r\n\r\n    const response = await axios.post(url, {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true\r\n    });\r\n    \r\n    const token = response.data.id\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport async function createUser(email, password) {\r\n    await authenticate('signUp', email, password);\r\n\r\n}\r\n\r\nexport async function login(email, password){\r\n    await authenticate('signInWithPassword', email, password);\r\n}"]},"metadata":{},"sourceType":"module"}