{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport COLORS from \"../../constants/colors\";\nimport hotels from \"../../constants/hotels\";\nimport Card from \"./card/Card\";\nimport TopHotelCard from \"./top-hotel-card/TopHotelCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width;\n\nvar cardWidth = width / 1.8;\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var categories = ['Top Rated', 'Ha Noi', 'Da Nang', 'Ho Chi Minh'];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectCategoryIndex = _useState2[0],\n      setSelectCategoryIndex = _useState2[1];\n\n  var scrollX = useRef(new Animated.Value(0)).current;\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      RefFlastList = _useState4[0],\n      setRefFlastList = _useState4[1];\n\n  var CategoryList = function CategoryList() {\n    return _jsx(View, {\n      style: styles.categoryListContainer,\n      children: categories.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            setSelectCategoryIndex(index);\n            RefFlastList.scrollToIndex({\n              animated: true,\n              index: 0\n            });\n          },\n          children: _jsxs(View, {\n            children: [_jsx(Text, {\n              style: [styles.categoryListText, {\n                color: selectCategoryIndex == index ? COLORS.primary : COLORS.grey\n              }],\n              children: item\n            }), selectCategoryIndex == index && _jsx(View, {\n              style: {\n                height: 3,\n                width: 30,\n                backgroundColor: COLORS.primary,\n                marginTop: 2\n              }\n            })]\n          })\n        }, index);\n      })\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.white\n    },\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(View, {\n        style: {\n          paddingBottom: 15\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 30,\n            fontWeight: 'bold'\n          },\n          children: \"Find your hotel\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 30,\n              fontWeight: 'bold'\n            },\n            children: \"in\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 30,\n              fontWeight: 'bold',\n              color: COLORS.primary\n            },\n            children: \" T&T Hotels\"\n          })]\n        })]\n      }), _jsx(Icon, {\n        name: \"person-outline\",\n        size: 38,\n        color: COLORS.grey,\n        onPress: function onPress() {\n          Alert.alert(\"You need to login to use feature\", \"\", [{\n            text: \"Cancel\",\n            onPress: function onPress() {\n              return console.log(\"Cancel Pressed\");\n            },\n            style: \"cancel\"\n          }, {\n            text: \"Login\",\n            onPress: function onPress() {\n              navigation.navigate('Login');\n            }\n          }]);\n        }\n      })]\n    }), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [_jsxs(View, {\n        style: styles.searchInputContainer,\n        children: [_jsx(Icon, {\n          name: \"search\",\n          size: 30,\n          style: {\n            marginLeft: 20\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Search\",\n          style: {\n            fontSize: 20,\n            paddingLeft: 10,\n            width: '100%'\n          }\n        })]\n      }), _jsx(CategoryList, {}), _jsx(View, {\n        children: _jsx(Animated.FlatList, {\n          onScroll: Animated.event([{\n            nativeEvent: {\n              contentOffset: {\n                x: scrollX\n              }\n            }\n          }], {\n            useNativeDriver: true\n          }),\n          horizontal: true,\n          data: hotels,\n          contentContainerStyle: {\n            paddingVertical: 30,\n            paddingLeft: 20,\n            paddingRight: cardWidth / 2 - 40\n          },\n          ref: function ref(_ref3) {\n            setRefFlastList(_ref3);\n          },\n          showsHorizontalScrollIndicator: false,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item,\n                index = _ref2.index;\n            return _jsx(Card, {\n              navigation: navigation,\n              hotel: item,\n              index: index,\n              scrollX: scrollX\n            });\n          },\n          snapToInterval: cardWidth\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginHorizontal: 20,\n          marginTop: 15\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: 'bold',\n            color: COLORS.grey\n          },\n          children: \"All hotels\"\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return navigation.navigate('Top Hotels');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: COLORS.grey\n            },\n            children: \"Show all\"\n          })\n        })]\n      }), _jsx(FlatList, {\n        data: hotels,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: {\n          paddingLeft: 10,\n          marginTop: 20,\n          paddingBottom: 30\n        },\n        renderItem: function renderItem(_ref4) {\n          var item = _ref4.item;\n          return _jsx(TopHotelCard, {\n            hotel: item\n          });\n        }\n      })]\n    })]\n  });\n}\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  header: {\n    marginTop: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20\n  },\n  searchInputContainer: {\n    height: 50,\n    backgroundColor: COLORS.light,\n    marginTop: 15,\n    marginLeft: 20,\n    borderTopLeftRadius: 30,\n    borderBottomLeftRadius: 30,\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%'\n  },\n  categoryListContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginHorizontal: 20,\n    marginTop: 30\n  },\n  categoryListText: {\n    fontSize: 17,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/Documents/DoAn/hotel-app/src/screens/home/HomeScreen.js"],"names":["React","useRef","useState","Icon","COLORS","hotels","Card","TopHotelCard","Dimensions","get","width","cardWidth","HomeScreen","navigation","categories","selectCategoryIndex","setSelectCategoryIndex","scrollX","Animated","Value","current","RefFlastList","setRefFlastList","CategoryList","styles","categoryListContainer","map","item","index","scrollToIndex","animated","categoryListText","color","primary","grey","height","backgroundColor","marginTop","flex","white","header","paddingBottom","fontSize","fontWeight","flexDirection","Alert","alert","text","onPress","console","log","style","navigate","searchInputContainer","marginLeft","paddingLeft","event","nativeEvent","contentOffset","x","useNativeDriver","paddingVertical","paddingRight","ref","justifyContent","marginHorizontal","StyleSheet","create","paddingHorizontal","light","borderTopLeftRadius","borderBottomLeftRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport {\r\n    Animated, Dimensions, FlatList, Pressable, SafeAreaView, ScrollView, StyleSheet, Text, TextInput,\r\n    TouchableOpacity, View, Alert\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport COLORS from '../../constants/colors';\r\nimport hotels from '../../constants/hotels';\r\nimport Card from './card/Card';\r\nimport TopHotelCard from './top-hotel-card/TopHotelCard';\r\n\r\n\r\nconst { width } = Dimensions.get('screen');\r\nconst cardWidth = width / 1.8;\r\n\r\nfunction HomeScreen({ navigation }) {\r\n    const categories = ['Top Rated','Ha Noi', 'Da Nang', 'Ho Chi Minh'];\r\n    const [selectCategoryIndex, setSelectCategoryIndex] = useState(0);\r\n    const scrollX = useRef(new Animated.Value(0)).current;\r\n\r\n    const [RefFlastList,setRefFlastList]=useState(null)\r\n        const CategoryList = () => {\r\n        return (\r\n            <View style={styles.categoryListContainer}>\r\n                {categories.map((item, index) => (\r\n                    <TouchableOpacity key={index} activeOpacity={0.8} onPress={() =>\r\n                    {\r\n                        setSelectCategoryIndex(index)  \r\n                       RefFlastList.scrollToIndex({animated: true,index:0});\r\n                  \r\n                    } }>\r\n                        <View>\r\n                            <Text style={[styles.categoryListText, { color: selectCategoryIndex == index ? COLORS.primary : COLORS.grey }]}>\r\n                                {item}\r\n                            </Text>\r\n                            {selectCategoryIndex == index && (\r\n                                <View style={{ height: 3, width: 30, backgroundColor: COLORS.primary, marginTop: 2 }} />\r\n                            )}\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1, backgroundColor: COLORS.white }}>\r\n            <View style={styles.header}>\r\n                <View style={{ paddingBottom: 15 }}>\r\n                    <Text style={{ fontSize: 30, fontWeight: 'bold' }}>\r\n                        Find your hotel\r\n                    </Text>\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        <Text style={{ fontSize: 30, fontWeight: 'bold' }}>in</Text>\r\n                        <Text style={{ fontSize: 30, fontWeight: 'bold', color: COLORS.primary }}> T&T Hotels</Text>\r\n                    </View>\r\n                </View>\r\n                <Icon name='person-outline' size={38} color={COLORS.grey} onPress={() => { \r\n                                 Alert.alert(\r\n                                    \"You need to login to use feature\",\r\n                                    \"\",\r\n                                    [\r\n                                      {\r\n                                        text: \"Cancel\",\r\n                                        onPress: () => console.log(\"Cancel Pressed\"),\r\n                                        style: \"cancel\"\r\n                                      },\r\n                                      { text: \"Login\", onPress: () => {navigation.navigate('Login')} }\r\n                                    ]\r\n                                  );\r\n                             }}  />\r\n            </View>\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n                <View style={styles.searchInputContainer}>\r\n                    <Icon name='search' size={30} style={{ marginLeft: 20 }} />\r\n                    <TextInput\r\n                        placeholder='Search'\r\n                        style={{ fontSize: 20, paddingLeft: 10, width: '100%' }}\r\n                    />\r\n                </View>\r\n                <CategoryList />\r\n                <View>\r\n                    <Animated.FlatList\r\n                        onScroll={Animated.event(\r\n                            [{ nativeEvent: { contentOffset: { x: scrollX } } }],\r\n                            { useNativeDriver: true },\r\n                        )}\r\n                        horizontal\r\n                        data={hotels}\r\n                        contentContainerStyle={{\r\n                            paddingVertical: 30,\r\n                            paddingLeft: 20,\r\n                            paddingRight: cardWidth / 2 - 40\r\n                        }}\r\n                        ref={ref => {\r\n                            setRefFlastList(ref)\r\n                          }}\r\n                        showsHorizontalScrollIndicator={false}\r\n                        renderItem={({ item, index }) => <Card\r\n                            navigation={navigation}\r\n                            hotel={item}\r\n                            index={index}\r\n                            scrollX={scrollX}\r\n                        />}\r\n                        snapToInterval={cardWidth}\r\n                    />\r\n                </View>\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    marginHorizontal: 20,\r\n                    marginTop: 15\r\n                }}>\r\n                    <Text style={{ fontWeight: 'bold', color: COLORS.grey }}>All hotels</Text>\r\n                    <Pressable onPress={() => navigation.navigate('Top Hotels')}>\r\n                        <Text style={{ color: COLORS.grey }}>Show all</Text>\r\n                    </Pressable>\r\n                </View>\r\n                <FlatList\r\n                    data={hotels}\r\n                   \r\n                    horizontal\r\n                    showsHorizontalScrollIndicator={false}\r\n                    contentContainerStyle={{\r\n                        paddingLeft: 10,\r\n                        marginTop: 20,\r\n                        paddingBottom: 30\r\n                    }}\r\n                    renderItem={({ item }) => <TopHotelCard hotel={item} />}\r\n                />\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        marginTop: 20,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 20,\r\n    },\r\n    searchInputContainer: {\r\n        height: 50,\r\n        backgroundColor: COLORS.light,\r\n        marginTop: 15,\r\n        marginLeft: 20,\r\n        borderTopLeftRadius: 30,\r\n        borderBottomLeftRadius: 30,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n\r\n    },\r\n    categoryListContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal: 20,\r\n        marginTop: 30\r\n    },\r\n    categoryListText: {\r\n        fontSize: 17,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}